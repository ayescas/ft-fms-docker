#!/usr/bin/env bash
##!/bin/bash

# go to working dir
pwd="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)" || exit 1
cd "$pwd" || exit 1
parent_dir=$(dirname "${pwd}")

# parse config
function get_setting() {
  grep -Ev '^\s*$|^\s*\#' "$2" | grep -E "\s*$1\s*=" | sed 's/.*=//; s/^ //g'
}

function check_setting() {
  if [[ $(wc -l <<<"$1") -gt 1 ]]; then
    echo "multiple values found, 1 expected" >&2
    exit 1
  fi
}

# get settings from config
project_id=$(get_setting "ID" ../.env)
check_setting "$project_id"
[ -z "$project_id" ] && { printf "error: project ID empty!\n"; exit 1; }

# volume-paths array
paths=(
  "fms-admin-conf-${project_id}" "/Admin/conf/"
  "fms-data-backups-${project_id}" "/Data/Backups/"
  "fms-data-databases-${project_id}" "/Data/Databases/"
  "fms-data-preferences-${project_id}" "/Data/Preferences/"
  "fms-dbserver-extensions-${project_id}" "/Database Server/Extensions/"
  "fms-conf-${project_id}" "/conf/"
  "fms-http-dotconf-${project_id}" "/HTTPServer/.conf/"
  "fms-http-conf-${project_id}" "/HTTPServer/conf/"
  "fms-http-logs-${project_id}" "/HTTPServer/logs/"
  "fms-logs-${project_id}" "/Logs/"
  "fms-webpub-conf-${project_id}" "/Web Publishing/conf/"
)

# check directories
printf "\n\e[34mChecking directories on host...\e[39m\n"
for ((i = 1; i < "${#paths[@]}"; i += 2)); do
  if [[ ! -d "$parent_dir/fms-data${paths[$i]}" ]]; then
    printf "Directories in fms-data do not exist!" >&2
    exit 1
  fi
done

# create bind volumes
printf "\n\e[34mcreating volumes...\e[39m\n"
for ((i = 0; i < "${#paths[@]}"; i += 2)); do
  docker volume create --driver local -o o=bind -o type=none -o device="$parent_dir/fms-data${paths[$i + 1]}" "${paths[$i]}" || {
    printf "error while creating docker volumes" >&2
    exit 1
  }
done

printf "\nVolumes are setup.\n"
exit 0
